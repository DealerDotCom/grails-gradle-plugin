import org.apache.ivy.util.url.CredentialsStore
import org.gradle.api.artifacts.maven.MavenDeployment

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'

group = 'org.grails'
version = '1.1.1-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.grails.org/grails/repo" }
}

dependencies {
    compile gradleApi(), "org.grails:grails-launcher:1.0.5"
    groovy localGroovy()
    testCompile "org.spockframework:spock-core:0.6-groovy-1.8"
}

task sourcesJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier "javadoc"
    from javadoc
}

artifacts {
    archives jar
    archives sourcesJar, javadocJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    description = "Does a maven deploy of archives artifacts"

    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment ->
            signing.signPom(deployment)
        }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: project.hasProperty("sonatypeUsername") ? project.sonatypeUsername : null,
                password: project.hasProperty("sonatypePassword") ?  project.sonatypePassword : null)
        }
        snapshotRepository(url: "http://repo.grails.org/grails/libs-snapshots-local") {
            authentication(userName: project.hasProperty("artifactoryPublishUsername") ? project.artifactoryPublishUsername : null,
                password: project.hasProperty("artifactoryPublishPassword") ?  project.artifactoryPublishPassword : null)
        }

        pom.project {
            name 'Grails Gradle Plugin'
            packaging 'jar'
            description 'Gradle plugin for Grails'
            delegate.url 'http://grails.org/'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            scm {
                delegate.url 'scm:git@github.com:grails/grails-gradle-plugin.git'
                connection 'scm:git@github.com:grails/grails-gradle-plugin.git'
                developerConnection 'scm:git@github.com:grails/grails-gradle-plugin.git'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    delegate.url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'alkemist'
                    name 'Luke Daley'
                }

                developer {
                    id 'graemerocher'
                    name 'Graeme Rocher'
                }
                developer {
                    id 'pledbrook'
                    name 'Peter Ledbrook'
                }
            }
        }
    }
}

idea {
    project {
        jdkName "1.6"
        ipr {
            withXml { provider ->
                def node = provider.asNode()
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
                node.append(new XmlParser().parse(file("ideaCodeStyle.xml")))
            }
        }
    }
}
